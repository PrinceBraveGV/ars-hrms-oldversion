@using AristaHRM.Models

@{
    GridViewExtension grid = Html.DevExpress().GridView(settings =>
   {
       settings.Name = "DataRiwayatGrid";
       settings.CallbackRouteValues = new { Controller = "Supervisor", Action = "RiwayatPartial" };
       settings.Width = Unit.Percentage(100);
       settings.Theme = AristaHRM.Theme.SelectTheme;
       settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
       settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
       settings.Settings.VerticalScrollableHeight = 300;

       settings.SettingsPager.Visible = true;

       settings.CommandColumn.Visible = true;
       settings.CommandColumn.Caption = "Pilihan";
       settings.CommandColumn.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
       settings.CommandColumn.Width = Unit.Pixel(130);
       settings.CommandColumn.ShowNewButton = false;
       settings.CommandColumn.ShowNewButtonInHeader = false;
       settings.CommandColumn.ShowEditButton = false;
       settings.CommandColumn.ShowDeleteButton = false;
       settings.CommandColumn.ShowUpdateButton = true;
       settings.CommandColumn.ShowCancelButton = true;
       settings.CommandColumn.ShowClearFilterButton = true;
       settings.CommandColumn.ButtonType = GridCommandButtonRenderMode.Button;
       
       settings.SettingsText.FilterBarCreateFilter = "Kriteria Baru";
       settings.SettingsText.FilterBarClear = "Hapus";
       settings.SettingsText.FilterControlPopupCaption = "Pengaturan Kriteria";
       settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
       settings.Settings.ShowFilterRow = true;
       settings.Settings.ShowFilterRowMenu = true;
       settings.Settings.ShowFilterRowMenuLikeItem = true;
       settings.Settings.ShowGroupPanel = true;

       settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
       settings.SettingsBehavior.AllowFocusedRow = true;
       settings.SettingsBehavior.AllowSelectByRowClick = true;
       settings.SettingsText.GroupPanel = "Letakkan judul kolom di sini untuk melakukan sortir data berdasarkan kolom yang ditentukan.";

       settings.SettingsPager.Position = PagerPosition.Bottom;
       settings.SettingsPager.PageSize = 50;
       settings.SettingsPager.FirstPageButton.Visible = true;
       settings.SettingsPager.LastPageButton.Visible = true;
       settings.SettingsPager.PrevPageButton.Text = "Sebelumnya";
       settings.SettingsPager.NextPageButton.Text = "Berikutnya";
       settings.SettingsPager.PageSizeItemSettings.Visible = true;
       settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50", "100", "200", "500", "1000" };
       settings.SettingsPager.PageSizeItemSettings.Caption = "Jumlah data per halaman :";
       settings.SettingsText.EmptyDataRow = "Tidak ada data yang ditampilkan.";
       settings.ClientSideEvents.Init = "onInit";
       settings.ClientSideEvents.EndCallback = "onEndCallback";
       settings.ClientSideEvents.CustomButtonClick = "customButtonClick";


       settings.SettingsCommandButton.ClearFilterButton.Text = "Reset Kriteria";
       settings.SettingsCommandButton.ClearFilterButton.Image.Url = "~/Images/Refresh.png";
       settings.SettingsCommandButton.ClearFilterButton.Image.Width = Unit.Pixel(10);
       settings.SettingsCommandButton.ClearFilterButton.Image.Height = Unit.Pixel(10);

       settings.SettingsContextMenu.Enabled = true;
       settings.SettingsContextMenu.EnableRowMenu = DefaultBoolean.True;
       settings.SettingsContextMenu.EnableColumnMenu = DefaultBoolean.True;
       settings.SettingsContextMenu.EnableFooterMenu = DefaultBoolean.False;
       settings.SettingsContextMenu.EnableGroupPanelMenu = DefaultBoolean.False;

       // grup menu kolom
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ClearFilter = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.GroupByColumn = true;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.SortAscending = true;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.SortDescending = true;

       // grup menu baris
       settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
       settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
       settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
       settings.SettingsContextMenu.RowMenuItemVisibility.Refresh = true;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ClearSorting = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.HideColumn = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ShowCustomizationWindow = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ShowFilterRow = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ShowFilterRowMenu = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ShowFooter = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ShowGroupPanel = false;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.ShowSearchPanel = true;
       settings.SettingsContextMenu.ColumnMenuItemVisibility.UngroupColumn = false;

       settings.SettingsText.ContextMenuRefresh = "Refresh Data";
       settings.SettingsText.ContextMenuGroupByColumn = "Urutkan Sesuai Kolom";
       settings.SettingsText.ContextMenuSortAscending = "Urutan Naik";
       settings.SettingsText.ContextMenuSortDescending = "Urutan Turun";
       settings.SettingsText.ContextMenuShowSearchPanel = "Cari Data";
       settings.SettingsText.ContextMenuShowFilterEditor = "Buat Kriteria...";
       settings.SettingsText.SearchPanelEditorNullText = "Ketik di sini untuk mencari data...";


       // tombol akses cepat dari riwayat
       GridViewCommandColumnCustomButton btnApprovalK = new GridViewCommandColumnCustomButton();
       GridViewCommandColumnCustomButton btnApprovalT = new GridViewCommandColumnCustomButton();

       btnApprovalK.ID = "ApprovalK";
       btnApprovalK.Text = "Approval";
       btnApprovalK.Image.Url = "~/Images/Approve.png";
       btnApprovalK.Image.Width = Unit.Pixel(10);
       btnApprovalK.Image.Height = Unit.Pixel(10);

       btnApprovalT.ID = "ApprovalT";
       btnApprovalT.Text = "Approval";
       btnApprovalT.Image.Url = "~/Images/Approve.png";
       btnApprovalT.Image.Width = Unit.Pixel(10);
       btnApprovalT.Image.Height = Unit.Pixel(10);

       settings.CommandColumn.CustomButtons.Add(btnApprovalK);
       settings.CommandColumn.CustomButtons.Add(btnApprovalT);

       settings.CustomButtonInitialize = (s, e) =>
       {
           MVCxGridView dx = s as MVCxGridView;

           if (e.VisibleIndex == -1)
           {
               return;
           }

           var state = (string)dx.GetRowValues(e.VisibleIndex, "Status_Cuti").ToString().Trim();
           var jenis = (string)dx.GetRowValues(e.VisibleIndex, "Jenis_Cuti").ToString().Trim();
           var nama = (string)dx.GetRowValues(e.VisibleIndex, "Nama_Karyawan").ToString().Trim();
           if (state == "Tunggu" && jenis == "Cuti Tahunan")
           {
               if (e.ButtonID == "ApprovalT" && nama != User.Identity.Name)
               {
                   e.Visible = DefaultBoolean.True;
               }
               else
               {
                   e.Visible = DefaultBoolean.False;
               }
           }
           else if (state == "Tunggu" && jenis != "Cuti Tahunan")
           {
               if (e.ButtonID == "ApprovalK" && nama != User.Identity.Name)
               {
                   e.Visible = DefaultBoolean.True;
               }
               else
               {
                   e.Visible = DefaultBoolean.False;
               }
           }
           else
           {
               e.Visible = DefaultBoolean.False;
           }
       };
       
       /*
       settings.PreRender = (s, e) =>
       {
           var grids = s as MVCxGridView;
           grids.FilterExpression = "Contains([Pemberi], '" + ViewData["Nama_Atasan"].ToString() + "') Or Contains([Approved_By], '" + User.Identity.Name + "') Or Contains([Nama_Karyawan], '" + User.Identity.Name + "')";

           if (Session["Filter"] != null)
           {
               if (!string.IsNullOrEmpty(Session["Filter"].ToString()))
               {
                   grids.FilterExpression = Session["Filter"].ToString() + " Or Contains([Pemberi], '" + ViewData["Nama_Atasan"].ToString() + "') Or Contains([Approved_By], '" + User.Identity.Name + "') Or Contains([Nama_Karyawan], '" + User.Identity.Name + "')";
               }
           }
           else
           {
               grids.FilterExpression = "Contains([Pemberi], '" + ViewData["Nama_Atasan"].ToString() + "') Or Contains([Approved_By], '" + User.Identity.Name + "') Or Contains([Nama_Karyawan], '" + User.Identity.Name + "')";
           }

           foreach (GridViewDataColumn cols in grids.Columns)
           {
               cols.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
           }
       };
       */

       settings.HtmlRowCreated = (s, e) =>
       {
           if (e.RowType != GridViewRowType.Data) return;
           MVCxGridView dxwgv = s as MVCxGridView;
           var value = (string)dxwgv.GetRowValues(e.VisibleIndex, "Status_Cuti").ToString().Trim();
           if (value == "Disetujui")
           {
               e.Row.BackColor = System.Drawing.Color.White;
               // jika browser tidak dapat menampilkan warna dari server...
               e.Row.Style.Add("background-color", "#ffffff");
           }
           else if (value == "Ditolak" || value == "Dibatalkan")
           {
               e.Row.BackColor = System.Drawing.Color.Red;
               // jika browser tidak dapat menampilkan warna dari server...
               e.Row.Style.Add("background-color", "#ff0000");
               e.Row.ForeColor = System.Drawing.Color.White;
               e.Row.Style.Add("foreground-color", "#ffffff");
           }
           else
           {
               e.Row.BackColor = System.Drawing.Color.Yellow;
               // jika browser tidak dapat menampilkan warna dari server...
               e.Row.Style.Add("background-color", "#ffff00");
           }
       };

       bool first = true;
       settings.HtmlRowPrepared = (s, e) =>
       {
           if (e.RowType != GridViewRowType.Data) return;
           MVCxGridView dxwgv = s as MVCxGridView;

           if (e.VisibleIndex.Equals(dxwgv.FocusedRowIndex) && first)
           {
               first = false;
               return;
           }

           if (e.VisibleIndex.Equals(dxwgv.FocusedRowIndex) && !first)
           {
               first = true;
               e.Row.BackColor = System.Drawing.Color.Orange;
               e.Row.Style.Add("background-color", "#ffa500");
           }
           else if (!e.VisibleIndex.Equals(dxwgv.FocusedRowIndex))
           {
               var value = (string)dxwgv.GetRowValues(e.VisibleIndex, "Status_Cuti").ToString().Trim();
               if (value == "Disetujui")
               {
                   e.Row.BackColor = System.Drawing.Color.White;
                   // jika browser tidak dapat menampilkan warna dari server...
                   e.Row.Style.Add("background-color", "#ffffff");
               }
               else if (value == "Ditolak" || value == "Dibatalkan")
               {
                   e.Row.BackColor = System.Drawing.Color.Red;
                   // jika browser tidak dapat menampilkan warna dari server...
                   e.Row.Style.Add("background-color", "#ff0000");
                   e.Row.ForeColor = System.Drawing.Color.White;
                   e.Row.Style.Add("foreground-color", "#ffffff");
               }
               else
               {
                   e.Row.BackColor = System.Drawing.Color.Yellow;
                   // jika browser tidak dapat menampilkan warna dari server...
                   e.Row.Style.Add("background-color", "#ffff00");
               }
           }
       };

       if (Session["Filter"] != null)
       {
           if (!string.IsNullOrEmpty(Session["Filter"].ToString()))
           {
               settings.PreRender = (s, e) =>
               {
                   var grids = s as MVCxGridView;
                   grids.FilterExpression = Session["Filter"].ToString();
               };
           }
       }
       else
       {
           settings.PreRender = (s, e) =>
           {
               var grids = s as MVCxGridView;
               grids.FilterExpression = "Contains([Nama_Karyawan], '" + User.Identity.Name.Replace("'", "''") + "') Or Contains([Pemberi], '" + User.Identity.Name.Replace("'", "''") + "')";
           };
       }

       switch (AristaHRM.Theme.SelectTheme)
       {
           case "Aqua":
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#FFBD69");
               break;
           case "DevEx":
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#EFF0F2");
               break;
           case "Glass":
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#E9F6F8");
               break;
           case "PlasticBlue":
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#6D82C5");
               break;
           case "RedWine":
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#AD275C");
               break;
           case "SoftOrange":
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#D3D3D3");
               break;
           default: // kembali ke tema Aqua
               settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#FFBD69");
               break;
       }

       settings.CustomJSProperties = (s, e) =>
       {
           if (ViewData["EditSuccess"] != null)
           {
               e.Properties["cpMessage"] = ViewData["EditSuccess"].ToString().Trim();
           }
       };

       settings.KeyFieldName = "ID_Cuti";
       settings.Columns.Add(column =>
       {
           column.FieldName = "ID_Cuti";
           column.Caption = "ID Cuti";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(130);
           column.ReadOnly = true;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "NIK";
           column.Caption = "NIK";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(70);
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Nama_Karyawan";
           column.Caption = "Nama Karyawan";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(300);
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Jenis_Cuti";
           column.Caption = "Jenis Cuti";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(100);
           column.ColumnType = MVCxGridViewColumnType.ComboBox;
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
           var comboProperties = column.PropertiesEdit as ComboBoxProperties;
           comboProperties.DataSource = Providers.GetJenisCuti();
           comboProperties.TextField = "Jenis_Isi";
           comboProperties.ValueField = "Jenis_Isi";
           comboProperties.ValueType = typeof(string);
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Masa_Cuti";
           column.Caption = "Masa Cuti (hari)";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.Width = Unit.Pixel(100);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
           column.ColumnType = MVCxGridViewColumnType.SpinEdit;
           var spinProperties = column.PropertiesEdit as SpinEditProperties;
           spinProperties.MinValue = 1;
           spinProperties.MaxValue = 90;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Tgl_Mulai";
           column.Caption = "Tanggal Mulai";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(150);
           column.ColumnType = MVCxGridViewColumnType.DateEdit;
           column.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
           column.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
           column.Settings.AutoFilterCondition = AutoFilterCondition.GreaterOrEqual;
           var dateProperties = column.PropertiesEdit as DateEditProperties;
           dateProperties.EditFormat = EditFormat.Date;
           dateProperties.EditFormatString = "dd-MM-yyyy";
           dateProperties.DropDownButton.Image.Url = "~/Images/Kalender.png";
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Tgl_Selesai";
           column.Caption = "Tanggal Selesai";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(150);
           column.ColumnType = MVCxGridViewColumnType.DateEdit;
           column.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
           column.Settings.AutoFilterCondition = AutoFilterCondition.LessOrEqual;
           var dateProperties = column.PropertiesEdit as DateEditProperties;
           dateProperties.EditFormat = EditFormat.Date;
           dateProperties.EditFormatString = "dd-MM-yyyy";
           dateProperties.DropDownButton.Image.Url = "~/Images/Kalender.png";
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Tgl_Pengajuan";
           column.Caption = "Tanggal Pengajuan";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(150);
           column.ColumnType = MVCxGridViewColumnType.DateEdit;
           column.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
           column.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
           column.Settings.AutoFilterCondition = AutoFilterCondition.GreaterOrEqual;
           column.ReadOnly = true;
           var dateProperties = column.PropertiesEdit as DateEditProperties;
           dateProperties.EditFormat = EditFormat.Date;
           dateProperties.EditFormatString = "dd-MM-yyyy";
           dateProperties.DropDownButton.Image.Url = "~/Images/Kalender.png";
           dateProperties.DropDownButton.Visible = false;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Tgl_Setuju";
           column.Caption = "Tanggal Disetujui";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(150);
           column.ColumnType = MVCxGridViewColumnType.DateEdit;
           column.PropertiesEdit.DisplayFormatString = "dd-MM-yyyy";
           column.Settings.AutoFilterCondition = AutoFilterCondition.GreaterOrEqual;
           var dateProperties = column.PropertiesEdit as DateEditProperties;
           dateProperties.EditFormat = EditFormat.Date;
           dateProperties.EditFormatString = "dd-MM-yyyy";
           dateProperties.DropDownButton.Image.Url = "~/Images/Kalender.png";
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Keperluan";
           column.Caption = "Keperluan Cuti";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(200);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Pemberi";
           column.Caption = "Pemberi Cuti";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(200);
           column.Settings.AllowAutoFilter = DefaultBoolean.False;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Approved_By";
           column.Caption = "Disetujui Oleh";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(200);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Status_Cuti";
           column.Caption = "Status";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(100);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Keterangan";
           column.Caption = "Keterangan";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(200);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "Alasan";
           column.Caption = "Alasan Setuju/Tolak";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(200);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
       });
       settings.Columns.Add(column =>
       {
           column.FieldName = "User_Login";
           column.Caption = "Login User";
           column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           column.CellStyle.HorizontalAlign = HorizontalAlign.Justify;
           column.Width = Unit.Pixel(100);
           column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
           column.ReadOnly = true;
       });
   });
}

@grid.Bind(Model).GetHtml()