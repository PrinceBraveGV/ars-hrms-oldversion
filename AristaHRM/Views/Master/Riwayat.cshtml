@{
    ViewBag.Title = "HRIS - Daftar Riwayat Cuti";
    Layout = "~/Views/Shared/_mainLayout.cshtml";
}

@using AristaHRM.Models

@{
    Html.EnableUnobtrusiveJavaScript();
}

<style type="text/css">
    .prevButton {
        left: -3px;
    }

    .nextButton {
        right: -3px;
    }

    .navButtons {
        position: absolute;
        top: 50%;
    }

        .navButtons .dxb {
            width: 10px;
            height: 30px;
            padding-left: 3px !important;
            padding-right: 3px !important;
        }
</style>

<script type="text/javascript">
    // <![CDATA[

    function DataRiwayatGrid_FocusedRowChanged(s, e) {
        if (s.cpIsEditing) {
            s.UpdateEdit();
        }
    }

    function DataRiwayatGrid_RowDblClick(s, e) {
        s.StartEditRow(e.visibleIndex);
    }

    function editor_KeyDown(s, e) {
        switch (e.htmlEvent.keyCode) {
            case 13:
                DataRiwayatGrid.UpdateEdit();
                break;
            case 27:
                DataRiwayatGrid.CancelEdit();
                break;
        }
    }

    function onInit(s, e) {
        adjustSize();
        setInterval(refreshGrid, 60000);
    }

    function onEndCallback(s, e) {
        if (s.cpMessage)
        {
            alert(s.cpMessage);
            delete s.cpMessage;
        }

        var edit = s.GetEditor(1);
        if (edit) {
            edit.SelectAll();
            edit.SetFocus();
        }
        adjustSize();
    }
    function onControlsInitialized(s, e) {
        ASPxClientUtils.AttachEventToElement(window, "resize", function (evt) {
            adjustSize();
        });
    }
    function adjustSize() {
        var height = Math.max(0, document.documentElement.clientHeight);
        DataRiwayatGrid.SetHeight(height);
    }

    function refreshGrid()
    {
        // fungsi refresh grid otomatis setiap 5 menit
        var tm = new Date();
        var mins = tm.getMinutes();
        if (mins % 5 === 0) {
            DataRiwayatGrid.Refresh();
        }
    }

    // fungsi tombol khusus
    function customButtonClick(s, e) {
        if (e.buttonID === "ApprovalT") {
            window.location.href = "@DevExpressHelper.GetUrl(new { Controller = "Admin", Action = "ApprovalTahunan" })";
        }
        else if (e.buttonID === "ApprovalK") {
            window.location.href = "@DevExpressHelper.GetUrl(new { Controller = "Admin", Action = "ApprovalKhusus" })";
        }
    }

    // fungsi ribbon control
    function onCommandExecuted(s, e)
    {
        var button = e.item.name;
        var refreshData = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "Riwayat" })";
        var checkApproval = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "CheckApproval" })";
        var exportToPDF = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "EksporRiwayatPDF" })";
        var exportToXLS = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "EksporRiwayatXLS" })";
        var exportToXLSX = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "EksporRiwayatXLSX" })";
        var exportToRTF = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "EksporRiwayatRTF" })";
        var exportToCSV = "@DevExpressHelper.GetUrl(new { Controller = "Master", Action = "EksporRiwayatCSV" })";
        var pcuti = "@DevExpressHelper.GetUrl(new { Controller = "Admin", Action = "Pengajuan" })";
        var appspecial = "@DevExpressHelper.GetUrl(new { Controller = "Admin", Action = "ApprovalKhusus" })";
        var appyear = "@DevExpressHelper.GetUrl(new { Controller = "Admin", Action = "ApprovalTahunan" })";
        if (button == "Refresh")
        {
            window.location.href = refreshData;
        }
        else if (button == "Exam")
        {
            var conf = confirm("Yakin akan melakukan pemeriksaan cuti yang menunggu persetujuan atasan? \nProses ini membutuhkan waktu tunggu yang cukup lama.");
            if (conf == true) {
                // window.location.href = checkApproval;
                PopupAtasan.Show();
            }
        }
        else if (button == "ExPDF")
        {
            window.location.href = exportToPDF;
        }
        else if (button == "ExXLS")
        {
            window.location.href = exportToXLS;
        }
        else if (button == "ExXLSX")
        {
            window.location.href = exportToXLSX;
        }
        else if (button == "ExRTF")
        {
            window.location.href = exportToRTF;
        }
        else if (button == "ExCSV")
        {
            window.location.href = exportToCSV;
        }
        else if (button == "PCuti")
        {
            window.location.href = pcuti;
        }
        else if (button == "AppCT")
        {
            window.location.href = appyear;
        }
        else if (button == "AppCK")
        {
            window.location.href = appspecial;
        }
    }
    // ]]>
</script>

<div class="formbase">
    <table class="tablebase">
        <thead>
            <tr>
                <td class="tableheader">
                    <p class="tableheadercontent">Data Riwayat Cuti</p>
                </td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="tablebody">
                    <div class="tablebodycontent">
                        <label style="font: 12px Arial">
                            Berikut ini adalah daftar riwayat cuti karyawan yang telah diajukan sampai hari ini.
                            <br />Pilih menu "Ubah" untuk mengedit riwayat, atau "Hapus" untuk menghapus riwayat dari daftar secara permanen.<br /><br />
                            Klik "Periksa Persetujuan" untuk mengirimkan email konfirmasi kepada atasan pemberi cuti yang belum melakukan persetujuan cuti.
                        </label><br /><br />
                        @using (Html.BeginForm("Riwayat", "Master", FormMethod.Post))
                        {
                            Html.DevExpress().Ribbon(settings =>
                            {
                                settings.Name = "RibbonRiwayat";
                                settings.ShowFileTab = false;
                                settings.ShowGroupLabels = true;
                                settings.ShowTabs = true;
                                settings.ClientSideEvents.CommandExecuted = "function (s, e) { onCommandExecuted(s, e); }";
                                settings.Theme = AristaHRM.Theme.SelectTheme;

                                var ManageTab = settings.Tabs.Add("Riwayat");
                                ManageTab.Groups.Add(group =>
                                {
                                    group.Name = "Setting";
                                    group.Text = "Pengaturan";
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("Refresh", "Refresh Data", RibbonItemSize.Large, "~/Images/Refresh.png"));
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("Exam", "Periksa Persetujuan", RibbonItemSize.Large, "~/Images/Check.png"));
                                });
                                ManageTab.Groups.Add(group =>
                                {
                                    group.Name = "Export";
                                    group.Text = "Ekspor Data";
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("ExPDF", "Ekspor PDF", RibbonItemSize.Large, "~/Images/ExportPDF.png"));
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("ExXLS", "Ekspor XLS", RibbonItemSize.Large, "~/Images/ExportXLS.png"));
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("ExXLSX", "Ekspor XLSX", RibbonItemSize.Large, "~/Images/ExportXLSX.png"));
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("ExRTF", "Ekspor RTF", RibbonItemSize.Large, "~/Images/ExportRTF.png"));
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("ExCSV", "Ekspor CSV", RibbonItemSize.Large, "~/Images/ExportCSV.png"));
                                });
                                ManageTab.Groups.Add(group =>
                                {
                                    group.Name = "Shortcut";
                                    group.Text = "Akses Cepat";
                                    group.Items.Add(RibbonHelper.CreateButtonItem<RibbonButtonItem>("PCuti", "Pengajuan Cuti", RibbonItemSize.Large, "~/Images/Submit.png"));
                                    var ApprovalBtn = RibbonHelper.CreateButtonItem<RibbonDropDownButtonItem>("PApproval", "Persetujuan Cuti", RibbonItemSize.Large, "~/Images/Approval.png");
                                    ApprovalBtn.Items.Add(RibbonHelper.CreateSmallButtonItem<RibbonDropDownButtonItem>("AppCT", "Cuti Tahunan", null));
                                    ApprovalBtn.Items.Add(RibbonHelper.CreateSmallButtonItem<RibbonDropDownButtonItem>("AppCK", "Cuti Khusus", null));
                                    group.Items.Add(ApprovalBtn);
                                });
                            }).GetHtml();
                            Html.RenderAction("RiwayatPartial");
                            <br />
                        }
                    </div>
                </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td><p style="text-align:left; color:red; font:12px Arial">@ViewData["ErrorMsg"]</p></td>
            </tr>
        </tfoot>
    </table>
</div>

@Html.DevExpress().PopupControl(settings =>
{
    settings.Name = "PopupAtasan";
    settings.HeaderText = "Periksa Persetujuan Cuti";
    settings.CloseAction = CloseAction.OuterMouseClick;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.AllowDragging = true;
    settings.AllowResize = true;
    settings.Modal = false;
    settings.ScrollBars = ScrollBars.Vertical;
    settings.EnableHotTrack = true;
    settings.Height = Unit.Pixel(210);
    settings.Width = Unit.Pixel(470);
    settings.Theme = AristaHRM.Theme.SelectTheme;
    settings.ShowHeader = true;
    settings.ContentUrl = DevExpressHelper.GetUrl(new { Controller = "Master", Action = "CheckForm" });
}).GetHtml()